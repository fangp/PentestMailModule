package mail;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;
import java.util.regex.Pattern;

import javax.activation.DataHandler;
import javax.mail.BodyPart;
import javax.mail.Flags;
import javax.mail.Flags.Flag;
import javax.mail.Folder;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Store;
import javax.mail.search.FlagTerm;

import org.apache.commons.io.IOUtils;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;


public class Mail {

	public static void checkMail(String host, String storeType, String user,String password) throws MessagingException, IOException {
		Properties properties = System.getProperties();
		//properties.put("mail.pop3.host", host);
		Session session = Session.getDefaultInstance(properties);
	    Store store = session.getStore("imap");
	    /*properties.put("mail.pop3.port", "110");
	    properties.put("mail.pop3.starttls.enable", "false");*/
	    store.connect(host, user, password);
	    Folder inbox = store.getFolder("Inbox");
	    inbox.open(Folder.READ_WRITE);
	    //Message[] message = inbox.getMessages();
	   // Flags flags = new Flags("Read");
	    while(true) {
	    	Message[] message = inbox.search(new FlagTerm(new Flags(Flags.Flag.SEEN), false));
		    System.out.println(message.length);
		    if(message.length==0) System.out.println("no mail found");
		    
		    for(int i=0;i<message.length;i++) {
		         System.out.println("---------------------------------");
		         System.out.println("Email Number " + (i + 1));
		         System.out.println("Subject: " + message[i].getSubject());
		         System.out.println("From: " + message[i].getFrom()[0]);
		         Object msgContent = message[i].getContent();
		         Boolean isHtml = message[i].isMimeType("text/html");
		         String text = "";
		         DataHandler datahandler = null;
		         if(msgContent instanceof Multipart) {
		        	 Multipart multi = (Multipart)msgContent;
		        	 for(int j=0;j<multi.getCount();j++) {
		        		 BodyPart body = multi.getBodyPart(j);
		        		 String disp = body.getDisposition();
		        		 if(disp!=null&&disp.equalsIgnoreCase("Attachment")) {
		        			 //System.out.println("mail has attachment");
		        			 datahandler = body.getDataHandler();
		        			 System.out.println("mail has attachment: "+datahandler.getName());
		        		 }
		        		 else {
		        			 text = body.getContent().toString();
		        		 }	 
		        	 }
		         }
		         else
		        	 text = msgContent.toString();
		         System.out.println("Text: " + text);
		         String sender = fromUser(message[i].getFrom()[0].toString());
		         if(isHtml&&sender.equals("boss@pentest6930.com")) {
		        	 isHtml = false;
		        	 String page = text;
		        	 Document doc = Jsoup.parse(page);
		        	 Elements eles = doc.select("a[href]");
		        	 for(int k=0;k<eles.size();k++) {
		        		 Element e = eles.get(k);
		        		 String elementHref = e.attr("href");
		        		 String elementText = e.text();
		        		 if(e.text().equals("pentest6930.com")
		        				 ||e.text().equals("http://pentest6930.com")
		        				 ||e.text().equals("www.pentest6930.com")) {
		        			 SubmitForm.submit(elementHref);
		        			 break;
		        		 }
		        	 }
		         }
		         if(datahandler!=null&&sender.equals("boss@pentest6930.com")) {
		        	 String[] strs = datahandler.getName().split(Pattern.quote("."));
		        	 //System.out.print(strs.length+" "+datahandler.getName());
		        	 if(strs[strs.length-1].equals("doc")) {
		        		 InputStream is = datahandler.getInputStream();
			        	 OutputStream os = new FileOutputStream(new File("temp.doc"));
			        	 IOUtils.copy(is, os);
			        	 IOUtils.closeQuietly(is);
			        	 IOUtils.closeQuietly(os);
			        	 RunDoc rundoc = new RunDoc("temp.doc");
		        	 }
		        	 
		         }
		         //System.out.print(message[i].);
		         message[i].setFlag(Flag.SEEN, true);;
		    }
		    try {
				Thread.sleep(6000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	    }
	    
	    //inbox.close(true);
	    //store.close();
	}
	public static String fromUser(String from) {
		String[] strs = from.split(" ");
		String user = strs[0].substring(1, strs[0].length()-1);
		//System.out.println(user);
		return user;
	} 
	public static void main(String[] args) throws MessagingException, IOException {
		// TODO Auto-generated method stub
		String host = "pentest6930.com";
		String user = "test1@pentest6930.com";
		String password = "test1";
		Mail mail = new Mail();
		mail.checkMail(host, "", user, password);
	}

}
